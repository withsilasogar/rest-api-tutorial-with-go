// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Silas Ogar"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/register": {
            "post": {
                "description": "This endpoint is for creating new users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Creating a new user",
                "parameters": [
                    {
                        "description": "User object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfacesx.UserRegistrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/interfacesx.UserResponse"
                        }
                    }
                }
            }
        },
        "/{email}": {
            "get": {
                "description": "This endpoint is for fetching a new users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Gets a new user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Users Email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/interfacesx.UserResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "interfacesx.ResponseStatus": {
            "type": "string",
            "enum": [
                "success",
                "error"
            ],
            "x-enum-varnames": [
                "StatusSuccess",
                "StatusError"
            ]
        },
        "interfacesx.UserData": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/model.Role"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "interfacesx.UserRegistrationRequest": {
            "type": "object",
            "required": [
                "email",
                "fullName",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "interfacesx.UserResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/interfacesx.UserData"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/interfacesx.ResponseStatus"
                }
            }
        },
        "model.Role": {
            "type": "string",
            "enum": [
                "admin",
                "user"
            ],
            "x-enum-varnames": [
                "AdminRole",
                "UserRole"
            ]
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "http://0.0.0.0:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Swagger Documentation tUTORIAL",
	Description:      "This is a sample server celler server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
